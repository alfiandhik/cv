{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyOKAOiExvK1yfygZjmRFGH6",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/alfiandhik/cv/blob/main/item%20loss%202\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 3,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 487
        },
        "id": "hQber2BWcIbM",
        "outputId": "f0ae8cc7-97cc-4c2e-82a4-7c0a3432d503"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x500 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Define file paths for datasets\n",
        "file_paths = {\n",
        "    \"original\": \"foodmartFIM.txt\",  # Ganti dengan lokasi file dataset asli\n",
        "    \"heuristic\": \"heur.txt\",       # Ganti dengan lokasi file heuristic\n",
        "    \"naive\": \"naiv.txt\",           # Ganti dengan lokasi file naive\n",
        "    \"jaro_winkler\": \"jw.txt\",      # Ganti dengan lokasi file Jaro Winkler\n",
        "}\n",
        "\n",
        "# Load and count frequencies\n",
        "def load_and_count(file_path):\n",
        "    with open(file_path, 'r') as file:\n",
        "        lines = file.readlines()\n",
        "    items = [int(item) for line in lines for item in line.strip().split()]\n",
        "    return pd.Series(items).value_counts()\n",
        "\n",
        "# Load all datasets\n",
        "frequencies = {key: load_and_count(path) for key, path in file_paths.items()}\n",
        "\n",
        "# Align frequencies across all datasets\n",
        "all_items = set().union(*[freq.index for freq in frequencies.values()])\n",
        "aligned_frequencies = {\n",
        "    key: freq.reindex(all_items, fill_value=0) for key, freq in frequencies.items()\n",
        "}\n",
        "\n",
        "# Define testing parameters\n",
        "min_supp_range = (0.0003, 0.001)  # 0.03% to 0.1%\n",
        "avg_subset_length = 4\n",
        "feature_subset_ratio = 0.5\n",
        "\n",
        "# Total transactions in the original dataset\n",
        "total_transactions = aligned_frequencies[\"original\"].sum()\n",
        "\n",
        "# Calculate minSupp thresholds\n",
        "min_supp_values = (\n",
        "    total_transactions * min_supp_range[0],\n",
        "    total_transactions * min_supp_range[1],\n",
        ")\n",
        "\n",
        "# Filter items based on minSupp\n",
        "filtered_frequencies = {\n",
        "    key: freq[(freq >= min_supp_values[0]) & (freq <= min_supp_values[1])]\n",
        "    for key, freq in aligned_frequencies.items()\n",
        "}\n",
        "\n",
        "# Select a subset of features (50% of total features)\n",
        "total_features = len(filtered_frequencies[\"original\"])\n",
        "subset_size = int(total_features * feature_subset_ratio)\n",
        "selected_features = filtered_frequencies[\"original\"].nlargest(subset_size).index\n",
        "\n",
        "# Apply feature subset selection to all datasets\n",
        "subset_frequencies = {\n",
        "    key: freq.reindex(selected_features, fill_value=0)\n",
        "    for key, freq in filtered_frequencies.items()\n",
        "}\n",
        "\n",
        "# Calculate Item Loss for each sanitized dataset\n",
        "item_loss = {\n",
        "    key: abs(subset_frequencies[\"original\"].sum() - freq.sum())\n",
        "    for key, freq in subset_frequencies.items() if key != \"original\"\n",
        "}\n",
        "\n",
        "# Plot results\n",
        "plt.figure(figsize=(8, 5))\n",
        "plt.bar(item_loss.keys(), item_loss.values(), color=['blue', 'orange', 'green'])\n",
        "plt.title('Item Loss Comparison Across Algorithms')\n",
        "plt.xlabel('Algorithms')\n",
        "plt.ylabel('Item Loss (ILoss)')\n",
        "plt.grid(axis='y', linestyle='--', alpha=0.7)\n",
        "plt.show()\n"
      ]
    }
  ]
}